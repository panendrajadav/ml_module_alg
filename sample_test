{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOqBqEDqHqFIET7vcZA9Arn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"TEUKDQRGXFYV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716199266208,"user_tz":-330,"elapsed":39453,"user":{"displayName":"Panendra Jadav","userId":"13474040446990886047"}},"outputId":"e556090d-2a02-4549-ab22-d304c5f1de0d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fold 1: Mean Absolute Error: 0.237\n","Fold 2: Mean Absolute Error: 0.237\n","Fold 3: Mean Absolute Error: 0.236\n","Fold 4: Mean Absolute Error: 0.237\n","Fold 5: Mean Absolute Error: 0.236\n","Fold 6: Mean Absolute Error: 0.237\n","Fold 7: Mean Absolute Error: 0.236\n","Fold 8: Mean Absolute Error: 0.237\n","Fold 9: Mean Absolute Error: 0.236\n","Fold 10: Mean Absolute Error: 0.237\n","Average Mean Absolute Error: 0.24\n"]}],"source":["import ml_module\n","\n","# Load data\n","file_path = \"/content/merge_agg.csv\"\n","data = ml_module.load_data(file_path)\n","\n","# Create features (x) and target (y)\n","x, y = ml_module.create_target_and_predictors(data)\n","\n","# Train the model\n","trained_model = ml_module.train_algorithm_with_cross_validation(x, y)\n","\n","# Now, the client can use the trained_model for making predictions or further analysis.\n"]}]}